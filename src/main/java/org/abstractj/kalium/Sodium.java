/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.abstractj.kalium;

public class Sodium {
  public static int crypto_secretbox_keybytes() {
    return SodiumJNI.crypto_secretbox_keybytes();
  }

  public static int crypto_secretbox_noncebytes() {
    return SodiumJNI.crypto_secretbox_noncebytes();
  }

  public static int crypto_secretbox_macbytes() {
    return SodiumJNI.crypto_secretbox_macbytes();
  }

  public static int crypto_secretbox_zerobytes() {
    return SodiumJNI.crypto_secretbox_zerobytes();
  }

  public static int crypto_secretbox_boxzerobytes() {
    return SodiumJNI.crypto_secretbox_boxzerobytes();
  }

  public static String crypto_secretbox_primitive() {
    return SodiumJNI.crypto_secretbox_primitive();
  }

  public static int crypto_secretbox_easy(byte[] dst_cipher, byte[] src_plain, int plain_len, byte[] nonce, byte[] secret_key) {
    return SodiumJNI.crypto_secretbox_easy(dst_cipher, src_plain, plain_len, nonce, secret_key);
  }

  public static int crypto_secretbox_open_easy(byte[] dst_plain, byte[] src_cipher, int cipher_len, byte[] nonce, byte[] secret_key) {
    return SodiumJNI.crypto_secretbox_open_easy(dst_plain, src_cipher, cipher_len, nonce, secret_key);
  }

  public static int crypto_secretbox_detached(byte[] dst_cipher, byte[] mac, byte[] src_plain, int plain_len, byte[] nonce, byte[] secretkey) {
    return SodiumJNI.crypto_secretbox_detached(dst_cipher, mac, src_plain, plain_len, nonce, secretkey);
  }

  public static int crypto_secretbox_open_detached(byte[] dst_plain, byte[] src_cipher, byte[] mac, int cipher_len, byte[] nonce, byte[] secretkey) {
    return SodiumJNI.crypto_secretbox_open_detached(dst_plain, src_cipher, mac, cipher_len, nonce, secretkey);
  }
}
